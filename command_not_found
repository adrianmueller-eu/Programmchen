#!/bin/bash

if [[ ! -t 0 ]]; then
  # not interactive, but piped
  echo "Sorry, couldn't find: $*"
  exit 1
fi

notfoundfile=~/.zsh_notfound_history
ask=true
functions_needed=false
cmd=
# link regex does not work because (http:)// gets recognized as file path
case $1 in
  fw)
    f w
    ;;
  wpff)
    cmd=wlan
    arg=off
    functions_needed=true
    ;;
  o*)
    arg=${1:1}
    [[ "$arg" == "." ]] && ask=false
    cmd=open
    ;;
  j.)
    ask=false
    cmd=j
    arg=.
    functions_needed=true
    ;;
  greo)
    cmd=grep
    arg="--color=always" # grep alias is created by oh-my-zsh
    ;;
  e*|n*|m*)
    arg=${1:1}
    cmd=${1:0:1}
    functions_needed=true
    ;;
  se*|sn*|sm*)
    arg=${1:2}
    cmd=${1:0:2}
    functions_needed=true
    ;;
#  t*) # make script zsh compatible first
#    arg=${1:1}
#    cmd=t
#    ;;
  *)
    if [[ -f "$P/asciiart/$1" ]]; then
      cat "$P/asciiart/$1"
      exit 0
    fi
    echo "Sorry, couldn't find: $*"
    # TODO: count notfounds and recommend adding over a certain threshold
    echo "Maybe you can add it to handle if it was a frequent misspelling."
    printf "%s:%s\n" "$(date +%s)" "$*" >> "$notfoundfile"
    exit 1
    ;;
esac

if [[ -n "$cmd" ]]; then
  args=($@)
  [[ -n "$arg" ]] && args[0]=$arg
  if [[ "$ask" == "true" ]]; then
    printf "Did you mean: $cmd ${args[*]} ? (y/n) [y]: "
    [[ -n "$ZSH_VERSION" ]] && readoption="-k" || readoption="-n"
    read $readoption 1 ans
    case "$ans" in
      n)
        echo
        exit 0
        ;;
      "")
        ;;
      *)
        echo
        ;;
    esac
  fi

  if [[ "$functions_needed" == "true" ]]; then
    #source ~/.zshrc
    SHELL=bash
    source ~/.profile  # index functions (no aliases!)
  fi
  "$cmd" "${args[@]}"
fi
